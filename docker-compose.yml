services:
  web:
    build:
      context: .
      args:
        BASE_URL: ${BASE_URL}
    command: gunicorn example_project.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120
    volumes:
      - .:/app  # Mount the entire project directory to /app inside the container
      - static_volume:/app/staticfiles
      - db_volume:/app/db.sqlite3
    ports:
      - "8000:8000"
    env_file:
      - .env
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3

  internal_nginx:
    image: nginx:latest
    container_name: internal_nginx
    ports:
      - "8080:80"  # Expose internal Nginx on port 8080 on the host
    volumes:
      - ./internal_nginx.conf:/etc/nginx/conf.d/default.conf  # Custom Nginx config
      - static_volume:/app/staticfiles
    depends_on:
      - web  # Ensure web service starts before internal_nginx
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  static_volume:
  db_volume:
